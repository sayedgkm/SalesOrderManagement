@page "/SalesOrderDetails"
@page "/SalesOrderDetails/{SalesOrderId:int}"
@using SalesOrderManagement.Shared
@inject HttpClient Http
@inject NavigationManager UriHelper
<h3 class="text-center">Sales Order Details</h3>
@if (isDataLoading){
    <p>Loading.....</p>
}else{

    <div class="row mt-3">
        <div class="col padding-right-0">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-5 border-right-1">
                            Sales Order Name
                        </div>
                        <div class="col-md-7">
                            @actionResult.Response.Name
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col padding-left-0">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-5 border-right-1">
                            State
                        </div>
                        <div class="col-md-7">
                            @actionResult.Response.State
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div>
        <h4 class="mt-5">List of Windows</h4>
    </div>
    
    <table class="table table-bordered">
        <thead class="thead-light">
                <tr>
                    <th></th>
                    <th>Name</th>
                    <th>Quantity</th>
                <th>TotalSubElements</th>
                </tr>
            </thead>
            <tbody>
            @{int id = 0;}
            @foreach (var window in actionResult.Response.Windows)
            {
                int localId = id;
                <tr class="@(@window.IsExpanded? "selected-row": "")">
                    <td @onclick="()=> ExpandOrCollapseRow(localId)" class="text-center">
                        <button class="btn">
                            @if(window.IsExpanded) {
                                <i class="fa-solid fa-chevron-up"></i>
                            } else {
                                <i class="fa-solid fa-chevron-down"></i>
                            }
                        </button>
                    </td>
                    <td>@window.Name</td>
                    <td>@window.Quantity</td>
                    <td>@window.SubElements.Count</td>
                </tr>

                <tr class="@(@window.IsExpanded? "": "display-none")">
                    <td colspan="12">
                        <div>
                            <table calss="table table-bordered width-100" style="width: 100%">
                                <thead>
                                    <tr>
                                    <th class="nested-col nested-col-border">Element No</th>
                                    <th class="nested-col-border">Element Type</th>
                                    <th class="nested-col-border">Width</th>
                                    <th class="nested-col-border">Height</th>
                                    </tr>
                                </thead>
                                <tbody>
                                @{int i = 1;}
                                @foreach (var element in window.SubElements) {
                                    <tr>
                                        <td class="nested-col nested-col-border">@i</td>
                                            <td class="nested-col-border">@(@element.ElementType == 0 ? "Window" : "Door")</td>
                                        <td class ="nested-col-border">@element.Width</td>
                                        <td class="nested-col-border">@element.Height</td>
                                    </tr>

                                    i++;
                                    }
                                </tbody>
                            </table>
                        </div>
                    </td>
                </tr>

                
                id++;
            }
            </tbody>
    </table>
}
@code {

    [Parameter]
    public int SalesOrderId { get; set; }
    public ActionResultDTO<SalesOrderDTO> actionResult;
    private bool isDataLoading = true;
    protected override async Task OnInitializedAsync()
    {
        actionResult = await Http.GetFromJsonAsync<ActionResultDTO<SalesOrderDTO>>($"api/SalesOrder/{SalesOrderId}");
        isDataLoading = false;
    }

    private void ExpandOrCollapseRow(int i) {
        var window = actionResult.Response.Windows.ToList()[i];
        window.IsExpanded = !window.IsExpanded;
    }
}
