// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesOrderManagement.Data.DBContext;

#nullable disable

namespace SalesOrderManagement.Data.Migrations
{
    [DbContext(typeof(SalesOrderDbContext))]
    [Migration("20230215165213_init2")]
    partial class init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalesOrderManagement.Core.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2023, 2, 15, 22, 52, 12, 835, DateTimeKind.Local).AddTicks(1963),
                            Name = "New York Building 1",
                            State = "NY"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2023, 2, 15, 22, 52, 12, 835, DateTimeKind.Local).AddTicks(1981),
                            Name = "California Hotel AJK",
                            State = "CA"
                        });
                });

            modelBuilder.Entity("SalesOrderManagement.Core.Domain.SubElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ElementType")
                        .HasColumnType("int");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<int?>("Width")
                        .HasColumnType("int");

                    b.Property<int>("WindowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WindowId");

                    b.ToTable("SubElement");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ElementType = 1,
                            Height = 1850,
                            Width = 1200,
                            WindowId = 1
                        },
                        new
                        {
                            Id = 2,
                            ElementType = 0,
                            Height = 1850,
                            Width = 800,
                            WindowId = 1
                        },
                        new
                        {
                            Id = 3,
                            ElementType = 0,
                            Height = 1850,
                            Width = 700,
                            WindowId = 1
                        },
                        new
                        {
                            Id = 4,
                            ElementType = 0,
                            Height = 2000,
                            Width = 1500,
                            WindowId = 2
                        },
                        new
                        {
                            Id = 5,
                            ElementType = 1,
                            Height = 2200,
                            Width = 1400,
                            WindowId = 3
                        },
                        new
                        {
                            Id = 6,
                            ElementType = 0,
                            Height = 2200,
                            Width = 600,
                            WindowId = 3
                        },
                        new
                        {
                            Id = 7,
                            ElementType = 0,
                            Height = 2000,
                            Width = 1500,
                            WindowId = 4
                        },
                        new
                        {
                            Id = 8,
                            ElementType = 0,
                            Height = 2000,
                            Width = 1500,
                            WindowId = 4
                        });
                });

            modelBuilder.Entity("SalesOrderManagement.Core.Domain.Window", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Window");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "A51",
                            OrderId = 1,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 2,
                            Name = "C Zone 5",
                            OrderId = 1,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "GLB",
                            OrderId = 2,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "OHF",
                            OrderId = 2,
                            Quantity = 10
                        });
                });

            modelBuilder.Entity("SalesOrderManagement.Core.Domain.SubElement", b =>
                {
                    b.HasOne("SalesOrderManagement.Core.Domain.Window", "Window")
                        .WithMany("SubElements")
                        .HasForeignKey("WindowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Window");
                });

            modelBuilder.Entity("SalesOrderManagement.Core.Domain.Window", b =>
                {
                    b.HasOne("SalesOrderManagement.Core.Domain.Order", "Order")
                        .WithMany("Windows")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SalesOrderManagement.Core.Domain.Order", b =>
                {
                    b.Navigation("Windows");
                });

            modelBuilder.Entity("SalesOrderManagement.Core.Domain.Window", b =>
                {
                    b.Navigation("SubElements");
                });
#pragma warning restore 612, 618
        }
    }
}
